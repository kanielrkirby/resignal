---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" class="bg-neutral-900 text-white text-opacity-90">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
    <header></header>
    <nav>
      <ul>
        <li><a href="/">Messages</a></li>
        <li><a href="/about">About</a></li>
        <li><a href="/contact">Contact</a></li>
      </ul>
    </nav>
    <div>
      <nav id="conversations" class="bg-zinc-800 flex flex-col p-2">
        
      </nav>
      <slot />
    </div>
    <footer>
      <nav>
        <ul>
          <li><a href="/">Messages</a></li>
          <li><a href="/about">About</a></li>
          <li><a href="/contact">Contact</a></li>
        </ul>
      </nav>
    </footer>
	</body>
</html>

<script>
  import '../store/messages'
  import { $conversations } from '../store/conversations';
  import type { Conversation } from '../store/conversations';
  const conversationsList = document.querySelector('#conversations')!;
  type Conversations = Record<string, Conversation>

  $conversations.subscribe((conversations: Conversations) => {
      const entries = Object.entries(conversations);
      for (let i = 0; i < entries.length; i++) {
      const conversation = entries[i][1];
      const element = 
      `<a href="/conversation/${conversation.id}" class="bg-white rounded-lg p-4 ${location.pathname.split("/")[location.pathname.split("/").length - 1] === conversation.id ? "bg-opacity-[16%]" : "bg-opacity-0 hover:bg-opacity-[9%]"}"]>
        ${conversation.conversationTitle}
      </a>`;
      conversationsList.innerHTML += element;
      }
      });
</script>
